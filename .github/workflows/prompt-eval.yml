name: 'Prompt Evaluation'
on:
  pull_request:
    paths:
      - 'prompts/**'
      - 'promptfooconfig.yaml'
      - '.github/workflows/*.yml'
  push:
    branches:
      - main
    paths:
      - 'prompts/**'
      - 'promptfooconfig.yaml'
      - '.github/workflows/*.yml'
  workflow_dispatch:

jobs:
  evaluate:
    runs-on: ubuntu-latest
    environment: promptfoo
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Using a newer Node.js version for better compatibility

      - name: Set up promptfoo cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/promptfoo
          key: ${{ runner.os }}-promptfoo-v1
          restore-keys: |
            ${{ runner.os }}-promptfoo-

      - name: Install promptfoo
        run: |
          npm install -g promptfoo@latest
          echo "Installed promptfoo version:"
          promptfoo --version

      - name: Run promptfoo evaluation (PR)
        if: github.event_name == 'pull_request'
        uses: promptfoo/promptfoo-action@v1
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          prompts: 'prompts/**/*.txt'
          config: 'promptfooconfig.yaml'
          cache-path: ~/.cache/promptfoo
 
      - name: Generate HTML report
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Create output directory
          mkdir -p promptfoo-results
          mkdir -p results
          
          # Debug info
          echo "Checking API keys (masked for security)"
          echo "OPENAI_API_KEY set: ${{ secrets.OPENAI_API_KEY != '' }}"
          echo "ANTHROPIC_API_KEY set: ${{ secrets.ANTHROPIC_API_KEY != '' }}"
          
          # Show promptfoo version
          promptfoo --version
          
          # Generate HTML report with verbose output
          promptfoo eval -c promptfooconfig.yaml --output promptfoo-results/report.html --verbose || {
            echo "Promptfoo evaluation failed. Checking config..."
            cat promptfooconfig.yaml | grep -v "key\|secret\|token"
            exit 1
          }
 
      - name: Upload evaluation results
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: promptfoo-results-${{ github.sha }}
          path: |
            promptfoo-results/
          retention-days: 30
          if-no-files-found: warn